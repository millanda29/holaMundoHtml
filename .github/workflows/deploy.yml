name: Deploy to EC2 and ECR

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  EC2_HOST: ${{ secrets.EC2_HOST }}       # La IP p√∫blica de tu EC2
  EC2_USER: ${{ secrets.EC2_USER }}       # Nombre de usuario en EC2 (por ejemplo: ec2-user o ubuntu)
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }} # Llave privada SSH para acceder a la instancia EC2
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          sudo docker ps -q --filter "name=holamundohtml" | grep -q . && \
          sudo docker stop holamundohtml && \
          sudo docker rm holamundohtml || true
          sudo docker run -d --name holamundohtml -p 80:80 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
